<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PaytoNaira | Buy Exam Pin </title>
  <link rel="stylesheet" href="/css/toastr.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/aside.css">
  <link rel="stylesheet" href="/css/general.css">
  <link href="https://cdn.jsdelivr.net/npm/remixicon@2.2.0/fonts/remixicon.css" rel="stylesheet">
</head>

<body>
  <section class="dashboard-container bill-page">
    <%- include('../partials/aside') %>
      <main>
        <%- include('../partials/mobileHeader') %>
          <div class="dashboard-main-top">
            <h1>BUY EXAM PIN</h1>
          </div>

          <div class="balance-box">
            <div class="flex gap-6 bal-toggle">
              <p class="font-medium">Available balance</p>
              <span id="" class="balance-toggle hide-balance"><i class="ri-eye-off-line"></i></span>
              <span id="" class="balance-toggle show-balance"><i class="ri-eye-line"></i></span>
            </div>
            <h3 data-balance="<%= balance %>" class="font-semibold text-3xl wallet-balance">
              <%= balance %>
            </h3>
          </div>

          <section class="bill-box">
            <div class="bill-payer">
              <form>
                <div class="form-field">
                  <label id="exam">Select Exam Type</label>
                  <select name="exam" id="exam" class="exam">
                    <option value="">Please select your exam type</option>
                    <option value="AJA">Waec </option>
                    <option value="AJC">NECO </option>
                    <!-- <option value="AJB">JAMB</option> -->
                  </select>
                </div>
                <div class="form-group">
                  <div class="form-field">
                    <label for="quantity">Quantity</label>
                    <input name="quantity" id="quantity" class="quantity" type="number" min="1"
                      placeholder="Enter Quantity" />
                  </div>
                  <div class="form-field">
                    <label for="amount">Amount</label>
                    <input disabled name="amount" id="amount" class="amount" type="number" placeholder="Amount" />
                  </div>
                </div>
                <div class="form-group">
                  <div class="form-field">
                    <label for="phone">Phone Number</label>
                    <input name="phone" id="phone" class="phone" placeholder="Enter Phone Number" />
                  </div>
                  <div class="form-field">
                    <label for="email">Email Address</label>
                    <input name="email" id="email" class="email" type="tel" placeholder="Enter Your Email Address" />
                  </div>
                </div>
                <button class="block-btn submit-btn cta">Buy Now</button>
              </form>
            </div>
          </section>
      </main>
  </section>

  <script src="/js/balanceToggle.js"></script>
  <script src="/js/dashboard.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/toastr.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    const toastOptions = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "3000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    toastr.options = { ...toastOptions }
    const examSelect = document.querySelector('select.exam')
    const emailField = document.querySelector('input.email')
    const phoneField = document.querySelector('input.phone')
    const amountField = document.querySelector('input.amount')
    const quantityField = document.querySelector('input.quantity')
    const submitButton = document.querySelector('button.submit-btn')
    const form = document.querySelector('form')

    quantityField.value = 1
    let service_id;
    let quantity = 1
    let unitPrice = 0;
    let amount = 0;

    const updateBalance = (newBalance) => {
      const balanceField = document.querySelector('.wallet-balance')
      balanceField.dataset.balance = newBalance
      hideBalance()
    }

    const resetInputs = () => {
      examSelect.value = ""
      emailField.value = ""
      phoneField.value = ""
      amountField.value = ""
      quantityField.value = ""
      quantityField.value = 1
      quantity = 1
      unitPrice = 0;
      amount = 0;
      activateBuyButton()
    }

    const validatedData = () => {
      const examType = examSelect.value
      const email = emailField.value
      const phoneNumber = phoneField.value
      const computedAmount = Number(amountField.value)
      const quantityEntered = Number(quantityField.value)

      if (!examType || !amount || !quantity || computedAmount !== amount || quantityEntered !== quantity) {
        toastr.error('Please select exam type and then enter quantity')
        return false
      }
      if (!isBalanceEnough(computedAmount)) {
        toastr.error('Kindly fund your wallet', 'Insufficient Balance')
        return false
      }
      return {
        service_id: examType,
        email,
        quantity,
        amount,
        phoneNumber
      }
    }

    const recharge = () => {
      const data = validatedData()
      if (!data) {
        return
      }
      toastr.options = { ...toastOptions, "timeOut": "1000" }
      toastr.info("Processing your purchase, pls wait", "Processing")
      disableBuyButton()
      // send request to the server to 
      axios.post('/api/v1/exam/buy-result-checker', data)
        .then(response => {
          const { data } = response
          console.log(data);
          const { balance } = data
          updateBalance(balance)
          resetInputs()
          toastr.success("Purchase successful", "Success")
        })
        .catch(error => {
          activateBuyButton()
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }
          toastr.info(message, 'Purchase failed')
        })
    }

    const updateQuantity = () => {
      if (!unitPrice) {
        toastr.options = {
          ...toastOptions
        }
        toastr.error("Please select exam type", 'Exam type not select')
        return
      }
      const quantityEntered = Number(quantityField.value)
      if (!quantityEntered) {
        quantity = 1
        toastr.options = {
          ...toastOptions,
          "timeOut": "1000"
        }
        toastr.error("Quantity must be greater than zero")
        return
      }
      quantity = quantityEntered
      amount = quantityEntered * unitPrice
      amountField.value = amount
    }

    const updateExamType = () => {
      const selectedService_id = examSelect.value
      if (!selectedService_id) {
        toastr.options = {
          ...toastOptions
        }
        toastr.info("Pls select exam type", 'Invalid Option')
        return
      }
      service_id = selectedService_id
      disableBuyButton('Fetching price, pls wait')
      axios.post('/api/v1/packages', { service_id })
        .then(response => {
          activateBuyButton('Buy Pin')
          service_id = selectedService_id
          const { price } = response.data;
          const quantityEntered = Number(quantityField.value)
          unitPrice = price
          if (quantityEntered) {
            quantity = quantityEntered
            amountField.value = price * quantity
            amount = price * quantityEntered
          }
          else {
            quantity = 1
            quantityField.value = 1
            amountField.value = price
            amount = price
          }
          submitButton.disabled = false
        })
        .catch(error => {
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }
          toastr.info(message, 'Purchase failed')
          activateBuyButton()
        })
    }

    examSelect.addEventListener('change', () => {
      updateExamType()
    })

    quantityField.addEventListener('input', () => {
      updateQuantity()
    })

    form.addEventListener("submit", (event) => {
      event.preventDefault()
      recharge()
    })
  </script>
</body>

</html>