<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PaytoNaira | Buy Tv Subcription </title>
  <link rel="stylesheet" href="/css/toastr.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/aside.css">
  <link rel="stylesheet" href="/css/general.css">
  <link href="https://cdn.jsdelivr.net/npm/remixicon@2.2.0/fonts/remixicon.css" rel="stylesheet">
</head>

<body>
  <section class="dashboard-container bill-page">
    <%- include('../partials/aside') %>
      <main>
        <%- include('../partials/mobileHeader') %>
          <div class="dashboard-main-top">
            <h1>BUY TV SUBCRIPTION</h1>
            
          </div>
          <div class="balance-box">
            <div class="flex gap-6 bal-toggle">
              <p class="font-medium">Available balance</p>
              <span id="" class="balance-toggle hide-balance"><i class="ri-eye-off-line"></i></span>
              <span id="" class="balance-toggle show-balance"><i class="ri-eye-line"></i></span>
            </div>
            <h3 data-balance="<%= balance %>" class="font-semibold text-3xl wallet-balance">
              <%= balance %>
            </h3>
          </div>

          <section class="bill-box">
            <div class="bill-payer">
              <form>
                <div class="form-field">
                  <label id="provider">Provider</label>
                  <select name="provider" id="provider" class="provider">
                    <option value="">Please select your provider</option>
                    <option value="AKC">DSTV </option>
                    <option value="AKA">GOTV </option>
                    <option value="AKB">Startimes</option>
                    <option value="SMA">Showmax</option>
                  </select>
                </div>
                <div class="form-field">
                  <label for="package">Available Packages</label>
                  <select name="package" id="package" class="package">
                    <option value="">Please select your provider and then your prefered package
                    </option>
                  </select>
                </div>
                <div class="form-field">
                  <label for="card">Smart Card Number</label>
                  <input name="card" id="card" class="card" type="tel" placeholder="Enter Smart Card Number" />
                </div>
                <div class="form-group">
                  <div class="form-field">
                    <label for="phone">Phone Number</label>
                    <input name="phone" id="phone" class="phone" type="tel" placeholder="Enter Phone Number" />
                  </div>
                  <div class="form-field">
                    <label for="email">Email Address</label>
                    <input name="email" id="email" class="email" type="email" placeholder="Enter Your Email Address" />
                  </div>
                </div>
                <button class="block-btn submit-btn cta">Buy Now</button>
              </form>
            </div>
          </section>
      </main>
  </section>

  <script src="/js/balanceToggle.js"></script>
  <script src="/js/dashboard.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/toastr.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    const toastOptions = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "3000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    toastr.options = { ...toastOptions }
    const form = document.querySelector('form')
    const providerSelect = document.querySelector("select.provider")
    const packageSelect = document.querySelector("select.package")
    const emailField = document.querySelector('input.email')
    const phoneField = document.querySelector('input.phone')
    const cardField = document.querySelector('input.card')
    const submitButton = document.querySelector('button.submit-btn')

    const updateBalance = (newBalance) => {
      const balanceField = document.querySelector('.wallet-balance')
      balanceField.dataset.balance = newBalance
      hideBalance()
    }

    const resetInputs = () => {
      providerSelect.value = ''
      packageSelect.value = ''
      emailField.value = ''
      phoneField.value = ''
      cardField.value = ''
      activateBuyButton()
    }

    const validatedData = () => {
      // I need selected provider, package:price, code, email, phone number
      const service_id = providerSelect.value
      const [name, price, productCode] = packageSelect.value.split("**")
      const email = emailField.value
      const phoneNumber = phoneField.value
      const smartcardNumber = cardField.value
      const amount = Number(price)

      if (!service_id) {
        toastr.error('Pls select your provider', 'Provider not selected')
        return false
      }
      if (!productCode) {
        toastr.error('Pls select your preferred package', 'Package not selected')
        return false
      }
      if (!email) {
        toastr.error('Pls enter your email', 'Email not entered')
        return false
      }
      if (!phoneNumber) {
        toastr.error('Pls enter your phone number', 'Phone number not entered')
        return false
      }
      if (!smartcardNumber) {
        toastr.error('Pls your device card number', 'Device number not entered')
        return false
      }

      if (!isBalanceEnough(amount)) {
        toastr.error('Kindly fund your wallet', 'Insufficient Balance')
        return false
      }
      return {
        productCode,
        amount,
        name,
        service_id,
        email,
        phoneNumber,
        smartcardNumber,
        customerAccountId: smartcardNumber
      }
    }

    const recharge = () => {
      const data = validatedData()
      if (!data) {
        return
      }
      toastr.info("Processing your purchase, pls wait", "Processing")
      disableBuyButton()
      // send request to the server to 
      axios.post('/api/v1/tv/recharge', data)
        .then(response => {
          const { data } = response
          console.log(data);
          updateBalance(data.balance)
          resetInputs()
          toastr.success("Purchase successful", "Success")
        })
        .catch(error => {
          activateBuyButton()
          let message = "Try again letter"
          if (error.response) {
            const message = error.response.data || 'Contact technical support'
            toastr.error(message)
            console.log(error.response.data);
          }
          else {
            toastr.error('Contact technical support')
          }
        })
    }

    providerSelect.addEventListener("change", (event) => {
      const service_id = event.target.value
      packageSelect.innerHTML = `<option value="">Please wait, fetching packages...</option>`
      disableBuyButton('Fetching Packages')
      axios.post('/api/v1/packages', { service_id })
        .then(response => {
          const packages = response.data
          if (packages) {
            packageSelect.innerHTML = `<option value="">Please select your prefered package</option>`
            for (let index = 0; index < packages.length; index++) {
              const package = packages[index];
              const {
                name,
                price,
                productCode
              } = package
              const formattedPrice = nigerianCurrencyFormat.format(price)
              const packageOption = `<option value ='${name}**${price}**${productCode}'>${name} ${formattedPrice}</option>`
              packageSelect.innerHTML += packageOption
            }
          }
          else {
            packageSelect.innerHTML = `<option value="">Please select your prefered package</option>`
            packageSelect.innerHTML = `<option value="">Service currently not availble</option>`
            toastr.info('Choose another provider', 'Not availble')
          }
          activateBuyButton()
        })
        .catch(error => {
          activateBuyButton()
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }
          toastr.info(message, 'Purchase failed')
          providerSelect.innerHTML = `<option value="">Please select your provider</option>`
          packageSelect.innerHTML = `<option value="">Please select your provider and then your prefered package</option>`
        })
    })

    form.addEventListener('submit', (event) => {
      event.preventDefault()
      recharge()
    })

  </script>
</body>

</html>