<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>GiftedBrainz | Buy Data</title>
  <link rel="stylesheet" href="/css/toastr.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/general.css">
  <link rel="stylesheet" href="/css/aside.css">
  <link rel="stylesheet" href="/css/DataPlans.css">
</head>

<body>
  <section class="dashboard-container">
    <%- include('../partials/aside') %>

      <main>
        <%- include('../partials/mobileHeader') %>
          <div class="dashboard-main-top">
            <h1>BUY DATA</h1>
          </div>
          <div class="bill-payer">
            <form action="">
              <div class="form-group">
                <div class="choose form-field">
                  <label class="bold" for="network">SELECT NETWORK PROVIDER</label>
                  <select class="network" name="network" id="network" value="Select Option">
                    <!-- <option value="">Select Option</option> -->
                    <option value="1 MTN">MTN NG</option>
                    <option value="2 GLO">GLO</option>
                    <option value="3 9MOBILE">9MOBILE</option>
                    <option value="4 AIRTEL">AIRTEL NG</option>
                  </select>
                </div>
                <div class="choose form-field">
                  <label class="bold" for="data_plans">CHOOSE PLAN</label>
                  <select class="data_plans" name="data_plans" id="data_plans" value="Select Option">
                    <option value="">Select Option</option>
                    <% plans.forEach(function(plan, i, arr){ -%>
                      <option value="<%= plan.plan_id %> <%= plan.sale_price %>">
                        N<%= plan.sale_price %> for <%= plan.size %>
                      </option>
                      <% }); -%>
                  </select>
                </div>
              </div>
              <div class="form-field">
                <label class="bold" for="phoneNumber">PHONE NO.</label>
                <input type="tel" name="phoneNumber" id="phoneNumber" placeholder="0901 2345 678">
              </div>
              <div class="form-field">
                <label class="bold" for="pin">PIN</label>
                <input type="password" name="pin" id="pin" placeholder="****" />
              </div>
              <div class="page-end">
                <p class="flex gap-6 bold wallet-balance">
                  Total Bal.<span>
                    <%= balance %>
                  </span>
                </p>
                <div class="ctas">
                  <button type="button" class="cta share">share</button></a>
                  <button type="submit" class="cta submit submit-btn">Continue</button>
                </div>
              </div>
            </form>
          </div>

      </main>
  </section>

  <script src="/js/dashboard.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/toastr.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    const phoneNumberRegex = /^\d{11}$/;
    const toastOptions = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "4000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    toastr.options = { ...toastOptions }
    let walletBalance = 0;
    const balanceElement = document.querySelector('.wallet-balance > span')
    walletBalance = Number(balanceElement.textContent)
    balanceElement.textContent = `N${walletBalance}`

    const form = document.querySelector('form')
    const networkSelect = document.querySelector('select.network')
    const pricesSelect = document.querySelector('select.data_plans')
    const submitButton = document.querySelector('button.submit-btn')
    const phoneNumberInput = document.querySelector('input#phoneNumber')
    const pinInput = document.querySelector("input#pin");

    const disableBuyButton = (buttonText = 'Please wait') => {
      submitButton.disabled = true
      submitButton.textContent = buttonText
      submitButton.classList.add('disabled')
    }

    const activateBuyButton = (buttonText = 'Buy Now') => {
      submitButton.disabled = false
      submitButton.textContent = buttonText
      submitButton.classList.remove('disabled')
    }

    const resetInputs = () => {
      networkSelect.value = ""
      pricesSelect.value = ""
      phoneNumber.value = ""
      activateBuyButton()
    }

    const validatedData = () => {
      const item = pricesSelect.value
      let [plan_id, amount] = pricesSelect.value.split(" ")
      amount = Number(amount)
      const [network_id, network_type] = networkSelect.value.split(" ")
      const phoneNumber = phoneNumberInput.value.replaceAll(" ", "")
      const pin = pinInput.value
      // validate data
      if (!network_id || !network_type) {
        toastr.error('Pls select network provider')
        return false
      }
      if (!amount || !plan_id) {
        toastr.error('Pls choose plan')
        return false
      }
      if (!phoneNumberRegex.test(phoneNumber)) {
        toastr.error('Pls enter 11 digits phone number to recharge', 'Invalid Number')
        return false
      }
      if (walletBalance < amount) {
        toastr.error('Kindly fund your wallet', 'Insufficient Wallet Balance')
        return false
      }
      if (!pin) {
        toastr.error("Enter your pin");
        return false;
      }
      return {
        amount, plan_id,
        mobile_number: phoneNumber,
        network_id, network_type,
        pin
      }
    }

    const recharge = () => {
      const purchase_data = validatedData()
      if (!purchase_data) {
        return
      }
      disableBuyButton()
      // send to server for purchase
      axios.post("/api/v1/data_plan/purchase", purchase_data)
        .then(res => {
          const { data } = res
          walletBalance = data.balance || walletBalance - purchase_data.amount
          balanceElement.textContent = `N${walletBalance}`
          resetInputs()
          toastr.success('Your transaction is being processed')
        })
        .catch(error => {
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }
          toastr.info(message, 'Purchase failed')
          activateBuyButton()
        })
    }

    form.addEventListener('submit', (event) => {
      event.preventDefault()
      recharge()
    })

    const fetchPrices = (network_id, network_name) => {
      disableBuyButton()
      pricesSelect.innerHTML = `<option value="">Fetching packages</option>`
      axios.get(`/api/v1/data_plan/?network_id=${network_id}`)
        .then((response) => {
          activateBuyButton()
          const response_data = response.data
          const plans = response_data.data
          pricesSelect.innerHTML = `<option value="">Select Option</option>`
          for (let index = 0; index < plans.length; index++) {
            const plan = plans[index];
            pricesSelect.innerHTML += `<option value="${plan.plan_id} ${plan.sale_price}">
                               N${plan.sale_price} for ${plan.size}
                            </option>`
          }
        })
        .catch(error => {
          activateBuyButton()
          pricesSelect.innerHTML = `<option value="">Select your network provider and then desired plan</option>`
        })
    }

    networkSelect.addEventListener('change', (event) => {
      const item = event.target.value
      const [network_id, network_name] = item.split(" ")
      fetchPrices(network_id, network_name)
    })

  </script>
</body>

</html>