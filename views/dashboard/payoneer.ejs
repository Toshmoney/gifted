<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PaytoNaira | Trade Payoneer</title>
  <link rel="stylesheet" href="/css/toastr.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/general.css">
  <link rel="stylesheet" href="/css/aside.css">
  <link rel="stylesheet" href="/css/DataPlans.css">
  <link rel="stylesheet" href="/css/paypal.css">
  <link rel="icon" type="image/x-icon" href="/img/logo-img.png">


</head>

<body>
  <section class="dashboard-container">
    <%- include('../partials/tradeasides') %>

      <main>
        <% if (messages.error) { %>
          <div class="alert alert-danger" role="alert">
            <%= messages.error %>
          </div>
      <% } %>
      <% if (messages.info) { %>
          <div class="alert alert-info" role="alert">
            <%= messages.info %>
          </div>
      <% } %>
          <div class="dashboard-main-top">
            <div>
              <h1>TRADE PAYONEER</h1>
              <p>Select Buy or Sell</p>
            </div>
          </div>
          <div class="bill-payer">
            <div class="tab">
                <button class="tablinks" onclick="openTrade(event, 'Buy')">Buy</button>
                <button class="tablinks" onclick="openTrade(event, 'Sell')">Sell</button>
            </div>
        <div id="Buy" class="tabcontent">
          <h2 class="buy-available"></h2>
          <h2>Buying Price: NGN <span class="buying"></span> per $</h2> <br>
            <form class="buy-now">
                <div class="form-group">
                    <div class="choose form-field">
                        <label class="bold" for="service_id">SELECT TRADE TYPE</label>
                        <select class="service_id" name="service_id" id="service_id" value="Select Option" onchange="fetch_buying_price()">
                            <!-- <option value="">Select Option</option> -->
                            <option value="PAYONEER">PAYONEER FUNDS</option>
                        </select>
                        
                    </div>

                    <div class="choose form-field">
                        <label class="bold" for="currency">SELECT CURRENCY</label>
                        <select class="currency" name="currency" id="currency" value="Select Option">
                            <option value="USD">USD</option>
                            <!-- <option value="EUR">EUR</option>
                            <option value="GBP">GBP</option>
                            <option value="CAD">CAD</option>
                            <option value="AUD">AUD</option> -->
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-field">
                        <label class="bold" for="full_name">PAYPAL NAME</label>
                        <input type="text" name="full_name" id="full_name" placeholder="Payoneer Name">
                    </div>

                    <div class="form-field">
                        <label class="bold" for="email">PAYPAL EMAIL</label>
                        <input type="email" name="email" id="email" placeholder="Payoneer email">
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-field">
                        <label class="bold" for="amount">AMOUNT</label>
                        <input type="number" name="amount" id="amount" placeholder="Amount here">
                        <p class="font-bold text-xs">You are paying: <span id="total-amount"></span> </p>
                    </div>
                    <div class="form-field">
                        <label class="bold" for="pin">PIN</label>
                        <input type="password" name="pin" id="pin" placeholder="****" />
                    </div>
                </div>
              <div class="page-end">
                <p class="flex gap-6 bold wallet-balance">
                  Total Bal.<span>
                    <%= data.balance %>
                  </span>
                </p>
                <div class="ctas">
                  <button type="submit" class="cta submit submit-btn">Buy</button>
                </div>
              </div>
            </form>
        </div>

        <div id="Sell" class="tabcontent">
            <h2 class="sell-available"></h2>
          <h2>Selling Price: NGN <span class="selling"></span> per $</h2> <br>
            <form action="/trade/sell-payoneer" class="sell-form" method="post">
                <div class="form-group">
                    <div class="choose form-field">
                        <label class="bold" for="service_id">SELECT TRADE TYPE</label>
                        <select class="service_id" name="service_id" id="sell-service" value="Select Option" onchange="fetch_selling_price()">
                            <!-- <option value="">Select Option</option> -->
                            <option value="PAYONEER">PAYONEER FUNDS</option>
                        </select>

                        <br>
                        <h2>Kindly send your funds to: <span class="selling-mail"></span></h2>
                        <br>
                    </div>

                    <div class="choose form-field">
                        <label class="bold" for="network">SELECT CURRENCY</label>
                        <select class="service_id" name="currency" id="sell-currency" value="Select Option">
                            <!-- <option value="">Select Option</option> -->
                            <option value="USD">USD</option>
                            <!-- <option value="EUR">EUR</option>
                            <option value="GBP">GBP</option>
                            <option value="CAD">CAD</option>
                            <option value="AUD">AUD</option> -->
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-field">
                        <label class="bold" for="full_name">PAYONEER NAME</label>
                        <input type="text" name="full_name" id="sell-name" placeholder="Payoneer Name">
                    </div>

                    <div class="form-field">
                        <label class="bold" for="email">PAYONEER EMAIL</label>
                        <input type="email" name="email" id="sell-email" placeholder="Enter Payoneer email">
                    </div>
                </div>

                <div class="form-field">
                  <label for="file" class="bole file-upload-label">UPLOAD PROOF OF PAYMENT</label>
                  <input type="file" class="file-upload" name="proof" id="file" accept="image/*" required>
                </div>

                <div class="form-group">
                    <div class="form-field">
                        <label class="bold" for="amount">AMOUNT</label>
                        <input type="number" name="amount" id="sell-amount" placeholder="Amount here">
                        <p class="font-bold text-xs">You are getting: <span id="total-amount-selling"></span> </p>
                    </div>
                    <div class="form-field">
                        <label class="bold" for="pin">PIN</label>
                        <input type="password" name="pin" id="sell-pin" placeholder="****" />
                    </div>
                </div>
              <div class="page-end">
                <p class="flex gap-6 bold wallet-balance">
                  Total Bal.<span>
                    <%= data.balance %>
                  </span>
                </p>
                <div class="ctas">
                  <button type="submit" class="cta submit sell-submit-btn">Sell</button>
                </div>
              </div>
            </form>
          </div>
        </div>

      </main>
  </section>

  <script src="/js/dashboard.js"></script>
  <script src="/js/paypal.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/toastr.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8G1QZD83G2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8G1QZD83G2');
</script>

  <script>

    const toastOptions = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "4000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    toastr.options = { ...toastOptions }
    let walletBalance = 0;
    const balanceElement = document.querySelector('.wallet-balance > span')
    walletBalance = Number(balanceElement.textContent)
    balanceElement.textContent = `N${walletBalance}`

    const form = document.querySelector('form')
    const sellform = document.querySelector('.sell-form')

    const service_id = document.querySelector("#service_id").value;
    const sellservice_id = document.querySelector("#sell-service").value;

    async function fetch_selling_price(){
      const sellingMail = document.querySelector(".selling-mail")
      const tradeprice = await fetch(`/api/v1/trade_plan/${service_id}`)
      .then(res => res.json())
      console.log(tradeprice.data);
      let amt = tradeprice.data.dollar_sell_price;
      let isAvail = tradeprice.data.is_available;
      const avail = document.querySelector(".buy-available")
      if(isAvail){
        avail.textContent='Payoneer service is available';
        sellingMail.textContent = tradeprice.data.selling_mail;

      }else{
        avail.textContent='Payoneer services not available';
        avail.classList.toggle("not-available")
      }
      const buying = document.querySelector(".selling");
      buying.textContent = amt;
      const totalField = document.querySelector("#total-amount-selling")
      const amountField = document.querySelector("#sell-amount")
      amountField.addEventListener("input", () => {
        const amount = amountField.value
      totalField.textContent = Math.round(amt * Number(amount))
    })
    }

    async function fetch_buying_price(){
      const tradeprice = await fetch(`/api/v1/trade_plan/${service_id}`)
      .then(res => res.json())
      console.log(tradeprice.data);
      let amt = tradeprice.data.dollar_buy_price;
      let isAvail = tradeprice.data.is_available;
      const avail = document.querySelector(".sell-available")
      if(isAvail){
        avail.textContent='Payoneer service is available';
      }else{
        avail.textContent='Payoneer service is currently not available';
        avail.classList.toggle("not-available")
      }
      const buying = document.querySelector(".buying");
      buying.textContent = amt;
      const totalField = document.querySelector("#total-amount")
      const amountField = document.querySelector("#amount")
      amountField.addEventListener("input", () => {
        const amount = amountField.value
      totalField.textContent = Math.round(amt * Number(amount))
    })
    }

    fetch_selling_price()
    fetch_buying_price()
    
    const validatedData = () => {
    const email = document.querySelector("#email").value;
    const full_name = document.querySelector("#full_name").value;
    const amount = Number(document.querySelector("#amount").value);
    const pin = document.querySelector("#pin").value;
    const currency = document.querySelector("#currency").value;
    const service_id = document.querySelector("#service_id").value;
    const submitButton = document.querySelector('button.submit-btn')
      // validate data
      if (!service_id) {
        toastr.error('Pls select Trade Type')
        return false
      }
      if (!amount) {
        toastr.error('Pls input amount')
        return false
      }
      if (!full_name || !email) {
        toastr.error('Pls kindly provide your paypal details', 'Invalid Paypal Details')
        return false
      }
      if (walletBalance < amount) {
        toastr.error('Kindly fund your wallet', 'Insufficient Wallet Balance')
        return false
      }
      if (!pin) {
        toastr.error("Enter your pin");
        return false;
      }

      

      return {
        pin,
        email,
        full_name,
        service_id,
        amount,
        currency
      }
    }

    const recharge = () => {
    const submitButton = document.querySelector('button.submit-btn')

      const purchase_data = validatedData()
      if (!purchase_data) {
        return
      }
    //   disableBuyButton
      submitButton.textContent = 'please wait';
      submitButton.disable = true;
      submitButton.classList.add('disabled')
      // send to server for purchase
      axios.post("/trades/buy-payoneer", purchase_data)
        .then(res => {
          const { data } = res
          walletBalance = data.balance || walletBalance - purchase_data.amount
          balanceElement.textContent = `N${walletBalance}`

          submitButton.disabled = false
          submitButton.textContent = 'Buy';
          submitButton.classList.remove('disabled')
          toastr.success('Your transaction is being processed')
          location.href='/dashboard'
        })
        .catch(error => {
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }

          submitButton.disabled = false
          submitButton.textContent = 'Buy';
          submitButton.classList.remove('disabled')
          toastr.info(message, 'Purchase failed')
        })
    }


    form.addEventListener('submit', (event) => {
      event.preventDefault()
      recharge()
    })

    // Sell Trades processing
    const validatedTrade = () => {
    // sell details
    const sellemail = document.querySelector("#sell-email").value;
    const sellfull_name = document.querySelector("#sell-name").value;
    const sellamount = Number(document.querySelector("#sell-amount").value);
    const sellpin = document.querySelector("#sell-pin").value;
    const sellcurrency = document.querySelector("#sell-currency").value;
    const sellservice_id = document.querySelector("#sell-service").value;
    const sellsubmitButton = document.querySelector('button.sell-submit-btn')

      // validate data
      if (!service_id) {
        toastr.error('Pls select Trade Type')
        return false
      }
      if (!amount) {
        toastr.error('Pls input amount')
        return false
      }
      if (!full_name || !email) {
        toastr.error('Pls kindly provide your paypal details', 'Invalid Paypal Details')
        return false
      }
      if (walletBalance < amount) {
        toastr.error('Kindly fund your wallet', 'Insufficient Wallet Balance')
        return false
      }
      if (!pin) {
        toastr.error("Enter your pin");
        return false;
      }

      

      return {
        pin:sellpin,
        email:sellemail,
        full_name:sellfull_name,
        service_id:sellservice_id,
        amount:sellamount,
        currency:sellcurrency
      }
    }

    const tradePaypal = () => {
    const sellsubmitButton = document.querySelector('.sell-submit-btn')

      const purchase_data = validatedTrade()
      if (!purchase_data) {
        return
      }
    //   disableBuyButton
      sellsubmitButton.textContent = 'Please wait';
      sellsubmitButton.disable = true;
      sellsubmitButton.classList.add('disabled')
      // send to server for purchase
      axios.post("/trades/sell-payoneer", purchase_data)
        .then(res => {
          const { data } = res
          walletBalance = data.balance || walletBalance - purchase_data.amount
          balanceElement.textContent = `N${walletBalance}`

          sellsubmitButton.disabled = false
          sellsubmitButton.textContent = 'Sell';
          sellsubmitButton.classList.remove('disabled')
          toastr.success('Your transaction is being processed');
          location.href='/dashboard'
        })
        .catch(error => {
          let message = "Try again letter"
          if (error.response) {
            const { data, status } = error.response
            message = data?.message || message
          }

          sellsubmitButton.disabled = false
          sellsubmitButton.textContent = 'Sell';
          sellsubmitButton.classList.remove('disabled')
          toastr.info(message, 'Purchase failed')
        })
    }

    sellform.addEventListener('submit', (event) => {
      event.preventDefault()
      tradePaypal()
    })

  </script>
</body>

</html>